<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="SELECTIVE" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="bc84f3d6-6039-4ec9-89fc-a2364c9e6165" name="Changes" comment="">
      <change afterPath="$PROJECT_DIR$/front-end/Dockerfile" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/chat/Chat.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/chat/Chat.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/dashBoard/AllMyFriends.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/dashBoard/Home.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/dashBoard/Home.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/login/Login.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/login/Login.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/login/Register.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/navbar/Navbar.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/navbar/style.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/personalLog/PersonalLog.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/personalLog/PersonalLog.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/users/User.css" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/users/User.js" afterDir="false" />
      <change afterPath="$PROJECT_DIR$/front-end/src/components/users/Users.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/encodings.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/chat-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/chat-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/chat-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/chat-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/chat-service/src/main/java/com/example/socialmediaserver/controller/MessageController.java" beforeDir="false" afterPath="$PROJECT_DIR$/chat-service/src/main/java/com/example/socialmediaserver/controller/MessageController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/chat-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/chat-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/docker-compose.yml" beforeDir="false" afterPath="$PROJECT_DIR$/docker-compose.yml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/eureka-server/pom.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/eureka-server/src/main/java/com/example/serviceregistrationanddiscoveryservice/ServiceRegistrationAndDiscoveryServiceApplication.java" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/eureka-server/src/main/resources/application.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/eureka-server/target/classes/application.properties" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/eureka-server/target/classes/com/example/serviceregistrationanddiscoveryservice/ServiceRegistrationAndDiscoveryServiceApplication.class" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/package-lock.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/package-lock.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/package.json" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/package.json" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/App.css" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/App.css" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/App.js" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/App.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/front-end/src/index.js" beforeDir="false" afterPath="$PROJECT_DIR$/front-end/src/index.js" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/LogServiceApplication.java" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/LogServiceApplication.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/controller/PersonalLogController.java" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/controller/PersonalLogController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/service/PersonalLogService.java" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/src/main/java/com/socialmedia/logservice/service/PersonalLogService.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/log-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/Dockerfile" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/Dockerfile" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/pom.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/java/com/example/userservice/controller/UserController.java" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/java/com/example/userservice/controller/UserController.java" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/resources/META-INF/MANIFEST.MF" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/main/resources/application.properties" beforeDir="false" afterPath="$PROJECT_DIR$/user-service/src/main/resources/application.properties" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/user-service/src/test/java/com/example/userservice/SocialMediaWebApplicationTests.java" beforeDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Class" />
      </list>
    </option>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
    <option name="ROOT_SYNC" value="DONT_SYNC" />
  </component>
  <component name="JpbToolWindowState">
    <option name="myId2FirstActivated">
      <map>
        <entry key="com.haulmont.jpb.jpaInspector" value="true" />
        <entry key="com.haulmont.jpb.jpaPalette" value="true" />
        <entry key="com.haulmont.jpb.jpaStructure" value="true" />
      </map>
    </option>
    <option name="myId2Visible">
      <map>
        <entry key="com.haulmont.jpb.jpaInspector" value="true" />
        <entry key="com.haulmont.jpb.jpaStructure" value="false" />
      </map>
    </option>
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2IaRPvn6gprrfjdmLOOOl1i8gSF" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "RequestMappingsPanelOrder0": "0",
    "RequestMappingsPanelOrder1": "1",
    "RequestMappingsPanelWidth0": "75",
    "RequestMappingsPanelWidth1": "75",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "WebServerToolWindowFactoryState": "false",
    "jdk.selected.JAVA_MODULE": "openjdk-19",
    "last_opened_file_path": "C:/Users/linus/Documents/GitHub/social_media/social_media/vertx-service",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)",
    "nodejs_interpreter_path": "node",
    "nodejs_package_manager_path": "npm",
    "project.structure.last.edited": "Artifacts",
    "project.structure.proportion": "0.15",
    "project.structure.side.proportion": "0.2",
    "settings.editor.selected.configurable": "preferences.pluginManager",
    "spring.configuration.checksum": "d709240ab4fbb72273a429b38874fcd5"
  }
}]]></component>
  <component name="ReactorSettings">
    <option name="notificationShown" value="true" />
  </component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="C:\Users\linus\Documents\GitHub\social_media\social_media\vertx-service" />
      <recent name="C:\Users\linus\Documents\GitHub\social_media\social_media\user-service\src\main\resources" />
      <recent name="C:\Users\linus\Downloads\SocialMedia_WebApp-Personal_Log\social_media\chat-service" />
      <recent name="C:\Users\linus\Downloads\SocialMedia_WebApp-Personal_Log\social_media\log-service" />
      <recent name="C:\Users\linus\Downloads\SocialMedia_WebApp-Personal_Log\social_media\user-service" />
    </key>
    <key name="CopyClassDialog.RECENTS_KEY">
      <recent name="com.example.socialmediaserver.config" />
      <recent name="com.example.userservice.config" />
    </key>
  </component>
  <component name="RunAnythingCache">
    <option name="myCommands">
      <command value="mvn clean verify" />
      <command value="mvn clean" />
      <command value="mvn install" />
    </option>
  </component>
  <component name="RunDashboard">
    <option name="configurationTypes">
      <set>
        <option value="SpringBootApplicationConfigurationType" />
      </set>
    </option>
  </component>
  <component name="RunManager" selected="Docker.docker-compose.yml.chat-app: Compose Deployment">
    <configuration name="Debug Application" type="JavascriptDebugType" uri="http://localhost:3000">
      <method v="2" />
    </configuration>
    <configuration name="ApiGatewayApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <option name="ACTIVE_PROFILES" />
      <module name="api-gateway" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.app.apigateway.ApiGatewayApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ChatServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" singleton="false">
      <option name="ACTIVE_PROFILES" />
      <module name="chat-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.socialmediaserver.ChatServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="LogServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" singleton="false">
      <option name="ACTIVE_PROFILES" />
      <module name="log-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.socialmedia.logservice.LogServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ServiceRegistrationAndDiscoveryServiceApplication (1)" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <module name="service-registration-and-discovery-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.serviceregistrationanddiscoveryservice.ServiceRegistrationAndDiscoveryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="ServiceRegistrationAndDiscoveryServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot">
      <option name="ACTIVE_PROFILES" />
      <module name="service-registration-and-discovery-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.serviceregistrationanddiscoveryservice.ServiceRegistrationAndDiscoveryServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="UserServiceApplication" type="SpringBootApplicationConfigurationType" factoryName="Spring Boot" singleton="true">
      <option name="ACTIVE_PROFILES" />
      <module name="user-service" />
      <option name="SPRING_BOOT_MAIN_CLASS" value="com.example.userservice.UserServiceApplication" />
      <method v="2">
        <option name="Make" enabled="true" />
      </method>
    </configuration>
    <configuration name="docker-compose.yml.chat-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="chat-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.chatdb: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="chatdb" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.log-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="log-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.react-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="react-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <configuration name="docker-compose.yml.user-app: Compose Deployment" type="docker-deploy" factoryName="docker-compose.yml" temporary="true" server-name="Docker">
      <deployment type="docker-compose.yml">
        <settings>
          <option name="services">
            <list>
              <option value="user-app" />
            </list>
          </option>
          <option name="sourceFilePath" value="docker-compose.yml" />
        </settings>
      </deployment>
      <method v="2" />
    </configuration>
    <list>
      <item itemvalue="Docker.docker-compose.yml.chat-app: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.chatdb: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.log-app: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.react-app: Compose Deployment" />
      <item itemvalue="Docker.docker-compose.yml.user-app: Compose Deployment" />
      <item itemvalue="JavaScript Debug.Debug Application" />
      <item itemvalue="Spring Boot.ApiGatewayApplication" />
      <item itemvalue="Spring Boot.ChatServiceApplication" />
      <item itemvalue="Spring Boot.LogServiceApplication" />
      <item itemvalue="Spring Boot.ServiceRegistrationAndDiscoveryServiceApplication" />
      <item itemvalue="Spring Boot.ServiceRegistrationAndDiscoveryServiceApplication (1)" />
      <item itemvalue="Spring Boot.UserServiceApplication" />
    </list>
    <recent_temporary>
      <list>
        <item itemvalue="Docker.docker-compose.yml.chat-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.log-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.user-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.react-app: Compose Deployment" />
        <item itemvalue="Docker.docker-compose.yml.chatdb: Compose Deployment" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="bc84f3d6-6039-4ec9-89fc-a2364c9e6165" name="Changes" comment="" />
      <created>1670417688531</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1670417688531</updated>
      <workItem from="1670417690281" duration="215000" />
      <workItem from="1670418738946" duration="9545000" />
      <workItem from="1670491419394" duration="5303000" />
      <workItem from="1670577092401" duration="8562000" />
      <workItem from="1670601668456" duration="12913000" />
      <workItem from="1670794280587" duration="5436000" />
      <workItem from="1670840640139" duration="3262000" />
      <workItem from="1670861582159" duration="13123000" />
      <workItem from="1670927177555" duration="11684000" />
      <workItem from="1670950494376" duration="7081000" />
      <workItem from="1670974443713" duration="1590000" />
      <workItem from="1671712189657" duration="676000" />
      <workItem from="1672744997913" duration="264000" />
      <workItem from="1672745299035" duration="308000" />
      <workItem from="1672745635792" duration="17104000" />
      <workItem from="1672784105902" duration="3375000" />
      <workItem from="1672788049178" duration="4915000" />
      <workItem from="1672830424828" duration="3732000" />
      <workItem from="1672835048914" duration="11333000" />
    </task>
    <servers />
  </component>
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>